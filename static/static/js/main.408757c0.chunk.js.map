{"version":3,"sources":["components/AppNavbar.js","api.js","actions/itemAction.js","actions/types.js","components/Products.js","reducers/itemReducer.js","reducers/index.js","store.js","components/itemModal.js","App.js","serviceWorker.js","index.js"],"names":["AppNavbar","state","isOpen","toggle","_this","setState","react_default","a","createElement","Navbar","color","dark","expand","className","Container","NavbarBrand","href","NavbarToggler","onClick","this","Collapse","navbar","Nav","nabar","NavItem","NavLink","Component","API","setItemsLoading","type","Products","onDeleteClick","id","props","deleteItem","getItems","items","item","react_transition_group","map","_ref","_id","name","description","price","category","image","key","timeout","classNames","Card","Row","Col","xs","CardImg","top","width","src","alt","CardBody","CardTitle","CardSubtitle","CardText","connect","dispatch","axios","get","then","res","payload","data","initialState","loading","combineReducers","arguments","length","undefined","action","Object","objectSpread","concat","toConsumableArray","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","ItemModal","modal","onChange","e","defineProperty","target","value","onSubmit","preventDefault","newItem","addItem","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","for","Input","placeholder","block","post","App","es","components_AppNavbar","itemModal","components_Products","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.408757c0.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n\tCollapse,\r\n\tNavbar,\r\n\tNavbarToggler,\r\n\tNavbarBrand,\r\n\tNav,\r\n\tNavItem,\r\n\tNavLink,\r\n\tContainer\r\n} from 'reactstrap';\r\n\r\nclass AppNavbar extends Component {\r\n\t\r\n\tstate = {\r\n\t\tisOpen: false\r\n\t}\r\n\r\n\ttoggle = () => {\r\n\t\tthis.setState({\r\n\t\t\tisOpen: !this.state.isOpen\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<NavbarBrand href=\"/\">Products</NavbarBrand>\r\n\t\t\t\t\t\t<NavbarToggler onClick={this.toggle} />\r\n\t\t\t\t\t\t<Collapse isOpen={this.state.isOpen} navbar>\r\n\t\t\t\t\t\t\t<Nav className=\"ml-auto\" nabar>\r\n\t\t\t\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t\t\t\t<NavLink href=\"https://github.com/tobieeniafe\">Github</NavLink>\r\n\t\t\t\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Navbar>\r\n\t\t\t</div>\r\n\t\t); \r\n\t}\r\n\r\n}\r\n\r\n\t\r\n\r\nexport default AppNavbar;","// export const API = 'http://localhost:4000/product';\r\n\r\nexport const API = 'https://jsdevta.herokuapp.com/product';","import axios from 'axios';\r\nimport {API} from '../api';\r\nimport {GET_ITEMS, ADD_ITEM, ITEMS_LOADING} from './types';\r\n\r\nexport const getItems = () => dispatch => {\r\n\tdispatch(setItemsLoading());\r\n\taxios.get(API+\"/all\")\r\n\t\t.then(res => dispatch({\r\n\t\t\ttype: GET_ITEMS,\r\n\t\t\tpayload: res.data\r\n\t\t}))\r\n};\r\n\r\nexport const addItem = item => dispatch => {\r\n\taxios.post(API+'/add', item)\r\n\t\t.then(res => dispatch({\r\n\t\t\ttype: ADD_ITEM,\r\n\t\t\tpayload: res.data\r\n\t\t}))\r\n};\r\n\r\nexport const setItemsLoading = () => {\r\n\treturn{\r\n\t\ttype: ITEMS_LOADING\r\n\t};\r\n};","export const GET_ITEMS = 'GET_ITEMS';\r\nexport const ADD_ITEM = 'ADD_ITEM';\r\nexport const ITEMS_LOADING = 'ITEMS_LOADING';","import React, {Component} from 'react';\r\nimport {Container, Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Row, Col} from 'reactstrap';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport {connect} from 'react-redux';\r\nimport {getItems} from '../actions/itemAction';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Products extends Component {\r\n  componentDidMount() {\r\n    this.props.getItems();\r\n  }\r\n\r\n  onDeleteClick = id => {\r\n    this.props.deleteItem(id);\r\n  };\r\n\r\n  render() {\r\n    const { items } = this.props.item;\r\n    return (\r\n      <Container>\r\n          <TransitionGroup className=\"product-list\">\r\n            \r\n            {items.map(({ _id, name, description, price, category, color, image }) => (\r\n              <CSSTransition key={_id} timeout={500} classNames=\"fade\">\r\n                \r\n                <Card className=\"card-margin\">\r\n                <Row>\r\n                  <Col xs=\"6\">\r\n                    <CardImg top width=\"2%\" src={image} alt={name} />\r\n                  </Col>\r\n                  <Col xs=\"6\">\r\n                  <br/>\r\n                    <CardBody>\r\n                      <CardTitle><h3>{name}</h3></CardTitle>\r\n                      <CardSubtitle><h5>Category: {category}</h5></CardSubtitle>\r\n                      <CardText><h5> Color: {color} <br/> Price: ${price} <br/> Description: {description}</h5></CardText>\r\n                    </CardBody>\r\n                  </Col>\r\n                </Row>\r\n                </Card>\r\n\r\n              </CSSTransition>\r\n            ))}\r\n\r\n          </TransitionGroup>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nProducts.propTypes = {\r\n\tgetItems: PropTypes.func.isRequired,\r\n\titem:  PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\titem: state.item\r\n});\r\n\r\nexport default connect(mapStateToProps, {getItems})(Products);","import {GET_ITEMS, ADD_ITEM, ITEMS_LOADING} from '../actions/types';\r\n\r\nconst initialState = {\r\n\titems: [],\r\n\tloading: false\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n\tswitch(action.type){\r\n\t\tcase GET_ITEMS:\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\titems: action.payload,\r\n\t\t\tloading: false\r\n\t\t}\r\n\t\tcase ADD_ITEM:\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\titems: [action.payload, ...state.items]\r\n\t\t}\r\n\t\tcase ITEMS_LOADING:\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tloading: true\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import {combineReducers} from 'redux';\r\nimport itemReducer from './itemReducer';\r\n\r\nexport default combineReducers({\r\n\titem: itemReducer\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(rootReducer, initialState, compose(\r\n\tapplyMiddleware(...middleware),\r\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n));\r\n\r\nexport default store;","import React, {Component} from 'react';\r\nimport {Button, Modal, ModalHeader,  ModalBody, Form, FormGroup, Label, Input, Row, Col} from 'reactstrap';\r\nimport {connect} from 'react-redux';\r\nimport {addItem} from '../actions/itemAction';\r\n\r\nclass ItemModal extends Component {\r\n\tstate = {\r\n\t\tmodal: false,\r\n\t\tname: ''\r\n\t}\r\n\r\n\ttoggle = () => {\r\n\t\tthis.setState({\r\n\t\t\tmodal: !this.state.modal\r\n\t\t});\r\n\t};\r\n\r\n\tonChange = (e) => {\r\n\t\tthis.setState({ [e.target.name] : e.target.value });\r\n\t};\r\n\r\n\tonSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst newItem = {\r\n\t\t\tname: this.state.name,\r\n\t\t\tcolor: this.state.color,\r\n\t\t\tprice: this.state.price,\r\n\t\t\tdescription: this.state.description,\r\n\t\t\tcategory: this.state.category,\r\n\t\t\timage: this.state.image\r\n\t\t}\r\n\t\t// console.log(newItem);\r\n\t\tthis.props.addItem(newItem);\r\n\t\tthis.toggle();\r\n\t};\r\n\r\n\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<Button \r\n\t\t\t\t\tcolor='dark'\r\n\t\t\t\t\tclassName=\"add-btn\"\r\n\t\t\t\t\tonClick={this.toggle}\r\n\t\t\t\t>Add Product</Button>\r\n\r\n\t\t\t\t<Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n\t\t\t\t\t<ModalHeader toggle={this.toggle}>Add to product list</ModalHeader>\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Form onSubmit={this.onSubmit}>\r\n\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col xs=\"6\">\r\n\t\t\t\t\t\t\t\t\t<Label for=\"name\">Name</Label>\r\n\t\t\t\t\t\t\t\t\t<Input type=\"text\" name=\"name\" placeholder=\"Name\" onChange={this.onChange} className=\"input-margin\" />\r\n\t\t\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t\t\t<Col xs=\"6\">\r\n\t\t\t\t\t\t\t\t\t<Label for=\"color\">Color</Label>\r\n\t\t\t\t\t\t\t\t\t<Input type=\"text\" name=\"color\" placeholder=\"Color\" onChange={this.onChange} className=\"input-margin\" />\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t\t<Row>\r\n\r\n\t\t\t\t\t\t\t\t<Col xs=\"6\">\r\n\t\t\t\t\t\t\t\t\t<Label for=\"price\">Price</Label>\r\n\t\t\t\t\t\t\t\t\t<Input type=\"text\" name=\"price\" placeholder=\"Price\" onChange={this.onChange} className=\"input-margin\" />\r\n\t\t\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t\t\t<Col xs=\"6\">\r\n\t\t\t\t\t\t\t\t\t<Label for=\"description\">Description</Label>\r\n\t\t\t\t\t\t\t\t\t<Input type=\"text\" name=\"description\" placeholder=\"Description\" onChange={this.onChange} className=\"input-margin\" />\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col xs=\"6\">\r\n\t\t\t\t\t\t\t\t\t<Label for=\"category\">Category</Label>\r\n\t\t\t\t\t\t\t\t\t<Input type=\"text\" name=\"category\" placeholder=\"Category\" onChange={this.onChange} className=\"input-margin\" />\r\n\t\t\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t\t\t<Col xs=\"6\">\r\n\t\t\t\t\t\t\t\t\t<Label for=\"image\">Image</Label>\r\n\t\t\t\t\t\t\t\t\t<Input type=\"text\" name=\"image\" placeholder=\"Image link\" onChange={this.onChange} className=\"input-margin\" />\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t\t\t<Button color=\"dark\" block>Add</Button>\r\n\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\titem: state.item\r\n}); \r\n\r\nexport default connect(mapStateToProps, {addItem})(ItemModal);","import React, { Component } from 'react';\nimport {Provider} from 'react-redux';\nimport {Container} from 'reactstrap';\n\nimport AppNavbar from './components/AppNavbar'; \nimport Products from './components/Products'; \nimport store from './store';\nimport ItemModal from './components/itemModal';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n    \t<Provider store={store}>\n\t      <div className=\"App\">\n\t       <AppNavbar/>\n\t       <Container>\n\t       \t<ItemModal/>\n\t       \t<Products/>\n\t       </Container>\n\t      </div>\n\t\t</Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}